package com.example.flixsterplus

import android.R
import android.content.Intent.getIntent
import android.graphics.Movie
import android.os.Bundle
import android.util.Log
import android.widget.RatingBar
import android.widget.TextView
import com.codepath.asynchttpclient.AsyncHttpClient
import com.codepath.asynchttpclient.callback.JsonHttpResponseHandler
import com.google.android.youtube.player.YouTubeBaseActivity
import com.google.android.youtube.player.YouTubeInitializationResult
import com.google.android.youtube.player.YouTubePlayer
import com.google.android.youtube.player.YouTubePlayerView
import com.sun.net.httpserver.Headers
import okhttp3.Headers
import org.json.JSONArray
import org.json.JSONException
import org.parceler.Parcels


class DetailActivity {
}

import com.codepath.asynchttpclient.AsyncHttpClient
import com.codepath.asynchttpclient.callback.JsonHttpResponseHandler
import com.codepath.flixter.models.Movie
import com.google.android.youtube.player.YouTubeBaseActivity
import com.google.android.youtube.player.YouTubeInitializationResult
import com.google.android.youtube.player.YouTubePlayer
import com.google.android.youtube.player.YouTubePlayerView
import org.parceler.Parcels
import okhttp3.Headers


class DetailActivity : YouTubeBaseActivity() {
    var tvTitle: TextView? = null
    var tvOverview: TextView? = null
    var ratingBar: RatingBar? = null
    var youTubePlayerView: YouTubePlayerView? = null
    protected fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_detail)
        tvTitle = findViewById(R.id.tvTitle)
        tvOverview = findViewById(R.id.tvOverview)
        ratingBar = findViewById(R.id.ratingBar)
        youTubePlayerView = findViewById(R.id.player)
        val movie: Movie = Parcels.unwrap(getIntent().getParcelableExtra("movie"))
        tvTitle.setText(movie.getTitle())
        tvOverview.setText(movie.getOverview())
        ratingBar!!.rating = movie.getRating() as Float
        val client = AsyncHttpClient()
        client.get(
            java.lang.String.format(DetailActivity.Companion.VIDEOS_URL, movie.getMovieId()),
            object : JsonHttpResponseHandler() {
                fun onSuccess(i: Int, headers: com.sun.net.httpserver.Headers?, json: JSON) {
                    try {
                        val results: JSONArray = json.jsonObject.getJSONArray("results")
                        if (results.length() == 0) {
                            return
                        }
                        val youtubeKey = results.getJSONObject(0).getString("key")
                        Log.d("DetailActivity", youtubeKey)
                        initializeYoutube(youtubeKey)
                    } catch (e: JSONException) {
                        Log.e("DetailActivity", "Failed to fetch Json ", e)
                    }
                }

                fun onFailure(
                    i: Int,
                    headers: com.sun.net.httpserver.Headers?,
                    s: String?,
                    throwable: Throwable?
                ) {
                }
            })
    }

    private fun initializeYoutube(youtubeKey: String) {
        youTubePlayerView.initialize(
            DetailActivity.Companion.YOUTUBE_API_KEY,
            object : OnInitializedListener() {
                fun onInitializationSuccess(
                    provider: YouTubePlayer.Provider?,
                    youTubePlayer: YouTubePlayer,
                    b: Boolean
                ) {
                    Log.d("DetailActivity", "onSuccess")
                    youTubePlayer.cueVideo(youtubeKey)
                }

                fun onInitializationFailure(
                    provider: YouTubePlayer.Provider?,
                    youTubeInitializationResult: YouTubeInitializationResult?
                ) {
                    Log.d("DetailActivity", "onFailure")
                }
            })
    }

    companion object {
        private const val YOUTUBE_API_KEY = "AIzaSyBazJAo7LFerzqm3H2OGkpa-gZ5bDIZ3cc"
        const val VIDEOS_URL =
            "https://api.themoviedb.org/3/movie/%d/videos?api_key=a07e22bc18f5cb106bfe4cc1f83ad8ed"
    }
}